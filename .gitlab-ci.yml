default:
  image: gryphon/php-yarn:7.4
cache:
  key:
    files:
      - apps/backend/composer.lock
      - apps/web/yarn.lock
  paths:
    - apps/backend/vendor/
#    - apps/backend/node_modules/
    - apps/web/node_modules/

stages:
  - build
  - test
  - deploy
  - dast

# sast / dast jobs
include:
#  - template: Security/SAST.gitlab-ci.yml
  - template: DAST.gitlab-ci.yml

variables:
  DAST_API_SPECIFICATION: https://api-test.dme-cg.com/docs/api-docs.json
  DAST_API_HOST_OVERRIDE: api-test.dme-cg.com

api:build:
  stage: build
  only:
    changes:
      - "apps/backend/**/*"
      - ".gitlab-ci.yml"
  script:
    - cd apps/backend
    # Install Composer and project dependencies.
    # Composer already installed on image
    # - curl -sS https://getcomposer.org/installer | php
    # - php composer.phar install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    # Install laravel app
    - composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    # Environment
    - cp .env.testing .env
    # Generate an application key. Re-cache.
    - php artisan key:generate
    - php artisan config:cache
    # Run database migrations.
    - php artisan migrate
    # Passport keys
    - php artisan passport:keys

api:test:
  stage: test
  needs: ["api:build"]
  only:
    changes:
      - "apps/backend/**/*"
      - ".gitlab-ci.yml"
  script:
    - cd apps/backend
    # run laravel tests
    - php artisan test
    # run frontend tests
    # if you have any task for testing frontend
    # set it in your package.json script
    # comment this out if you don't have a frontend test
    #- npm test

api:deploy:
  stage: deploy
  # only for develop branch deploy to staging
  only:
    refs:
      - develop
    changes:
      - "apps/backend/**/*"
      - ".gitlab-ci.yml"
  script:
    # gitlab does not correctly parse certificate from textarea input on their ui, so has to be base64 encoded and decoded
    - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )"
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY_64" | base64 -d)
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    # Envoy has been added to the image
    # - curl -sS https://getcomposer.org/installer | php
    # - php composer.phar global require laravel/envoy
    - cd apps/backend
    - ~/.composer/vendor/bin/envoy run deploy --commit="$CI_COMMIT_SHA"
  environment:
    name: staging
    url: https://api-stage.dme-cg.com

web:build:
  stage: build
  only:
    changes:
      - "apps/web/**/*"
      - ".gitlab-ci.yml"
  script:
    - cd apps/web
    # install
    - yarn install

web:test:
  stage: test
  needs: ["web:build"]
  only:
    changes:
      - "apps/web/**/*"
      - ".gitlab-ci.yml"
  script:
    - cd apps/web
    # test
    - yarn test --watchAll=false

web:deploy:
  stage: deploy
  # only for develop branch deploy to staging
  only:
    refs:
      - develop
    changes:
      - "apps/web/**/*"
      - ".gitlab-ci.yml"
  script:
    # A Lambda will trigger AWS Amplify to build and deploy this
    - cd apps
    - yarn run build && zip -qr build.zip web && aws s3 cp build.zip s3://gryphon-web-stage
  environment:
    name: staging
    url: https://gryphon.dme-cg.com
